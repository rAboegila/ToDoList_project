var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.258,1,0.721]],["body/components/AppComponent.html",[0,0.404,1,1.205,2,1.39,3,0.51,4,0.443,5,1.151,6,1.151,7,1.151,8,1.151,9,0.443,10,2.456,11,1.151,12,2.145,13,1.924,14,2.463,15,1.55,16,4.57,17,1.55,18,4.042,19,0.581,20,0.996,21,2.786,22,0.657,23,0.042,24,1.284,25,1.151,26,1.032,27,3.308,28,1.032,29,3,30,0.657,31,0.581,32,0.51,33,0.657,34,1.151,35,1.55,36,1.55,37,1.151,38,1.875,39,1.151,40,0.996,41,1.151,42,0.657,43,1.151,44,0.657,45,1.151,46,0.657,47,1.151,48,0.657,49,1.151,50,0.739,51,1.151,52,0.657,53,0.51,54,1.151,55,0.657,56,0.925,57,1.151,58,1.151,59,0.029,60,0.029]],["title/modules/AppModule.html",[61,2.395,62,1.784]],["body/modules/AppModule.html",[1,1.348,3,0.409,4,0.355,9,0.355,13,0.827,23,0.043,30,1.209,31,0.466,32,0.409,33,0.527,42,1.074,44,1.074,46,1.074,48,1.074,50,1.208,52,1.074,53,0.409,55,1.074,59,0.025,60,0.025,62,3.531,63,1.294,64,2.111,65,1.968,66,1.968,67,1.968,68,1.968,69,2.639,70,2.835,71,1.968,72,1.466,73,2.405,74,3.464,75,2.835,76,2.835,77,2.835,78,3.464,79,1.968,80,1.681,81,3.464,82,1.681,83,2.405,84,2.405,85,2.405,86,1.968,87,1.466,88,1.968,89,1.968,90,1.968,91,3.464,92,3.464,93,1.466,94,1.968,95,1.968,96,2.405]],["title/modules/AppRoutingModule.html",[61,2.395,69,1.575]],["body/modules/AppRoutingModule.html",[0,0.447,3,0.496,4,0.431,9,0.431,23,0.043,30,1.205,31,0.565,32,0.496,33,0.639,42,0.869,44,0.639,46,0.869,48,0.869,52,0.869,53,0.496,55,0.869,56,0.9,59,0.028,60,0.028,63,1.57,69,2.135,75,2.388,77,3.246,86,2.388,87,1.779,88,2.388,89,2.388,90,2.388,94,2.388,95,2.388,97,2.918,98,2.918,99,3.966,100,2.746,101,1.397,102,2.746,103,2.918,104,2.039,105,5.335,106,3.966,107,2.135,108,3.966,109,3.966,110,1.779,111,2.918,112,2.918,113,3.246,114,2.918,115,2.918,116,2.918]],["title/guards/AuthGuard.html",[102,1.784,117,2.045]],["body/guards/AuthGuard.html",[3,0.496,4,0.431,9,0.431,14,1.779,19,0.565,22,0.869,23,0.043,28,1.364,30,1.059,31,0.565,32,0.496,33,0.639,40,0.977,59,0.028,60,0.028,101,1.397,102,2.417,107,1.57,113,4.138,118,2.918,119,2.388,120,1.521,121,1.119,122,2.039,123,2.069,124,2.746,125,2.947,126,2.918,127,1.697,128,1.697,129,2.772,130,2.918,131,4.835,132,4.506,133,4.835,134,2.918,135,3.966,136,1.119,137,4.506,138,3.966,139,1.899,140,4.506,141,1.899,142,1.779,143,1.779,144,2.039,145,2.388,146,1.249,147,1.779,148,2.918,149,2.772,150,1.779,151,2.918,152,2.918,153,2.039,154,1.779]],["title/components/LoginComponent.html",[0,0.258,42,0.641]],["body/components/LoginComponent.html",[0,0.352,1,0.572,2,1.162,3,0.395,4,0.343,5,0.891,6,0.891,7,0.891,8,0.891,9,0.343,11,0.891,12,2.035,13,1.825,15,1.295,17,1.295,19,0.45,20,0.832,22,0.872,23,0.043,24,1.871,25,1.295,26,1.162,28,1.503,30,0.957,31,0.45,32,0.395,33,0.509,34,0.891,35,1.295,36,1.295,37,0.891,38,1.676,39,0.891,40,0.981,41,0.891,42,0.957,43,0.891,44,0.509,45,0.891,46,0.509,47,0.891,48,0.509,49,0.891,50,0.572,51,0.891,52,0.509,53,0.395,54,0.891,55,0.509,56,1.042,57,0.891,58,0.891,59,0.024,60,0.024,93,1.416,101,1.112,107,2.757,120,1.295,121,0.891,122,1.624,123,1.871,124,2.427,125,2.664,127,0.994,128,0.994,129,2.361,136,0.891,143,1.416,146,0.994,147,1.416,153,1.624,155,1.901,156,3.981,157,3.378,158,2.608,159,2.608,160,3.378,161,2.323,162,0.994,163,2.323,164,2.323,165,2.323,166,2.323,167,2.323,168,2.323,169,1.624,170,2.323,171,2.323,172,1.901]],["title/components/NavbarComponent.html",[0,0.258,44,0.641]],["body/components/NavbarComponent.html",[0,0.322,1,0.493,2,1.041,3,0.34,4,0.296,5,0.768,6,0.768,7,0.768,8,0.768,9,0.296,11,0.768,12,1.963,13,1.761,15,1.16,17,1.16,19,0.388,20,0.746,22,0.799,23,0.043,25,0.768,26,0.689,28,1.688,30,0.956,31,0.388,32,0.34,33,0.439,34,0.768,35,1.16,36,1.16,37,0.768,38,1.559,39,0.768,40,0.899,41,0.768,42,0.439,43,0.768,44,0.89,45,0.768,46,0.439,47,0.768,48,0.439,49,0.768,50,0.493,51,0.768,52,0.439,53,0.34,54,0.768,55,0.439,56,0.617,57,0.768,58,0.768,59,0.022,60,0.022,72,1.844,101,0.959,107,1.629,110,2.798,120,1.16,121,0.768,123,1.739,124,2.223,125,2.478,127,0.857,128,0.857,136,1.674,139,1.449,143,1.221,146,0.857,147,1.844,153,1.399,154,1.844,162,1.868,173,1.639,174,3.026,175,3.647,176,3.026,177,3.647,178,1.963,179,3.327,180,4.065,181,4.065,182,4.065,183,2.003,184,3.647,185,2.188,186,3.026,187,3.026,188,2.003,189,2.003,190,2.003,191,2.003,192,2.003,193,2.003,194,1.078,195,1.221,196,1.639,197,2.003,198,2.003,199,2.115,200,2.003,201,2.003,202,2.003,203,2.003,204,2.003,205,2.003,206,2.003,207,2.003,208,2.003,209,2.003,210,3.026,211,3.026,212,2.003,213,2.003,214,2.003,215,2.003,216,3.026,217,2.003]],["title/components/NotfoundComponent.html",[0,0.258,46,0.641]],["body/components/NotfoundComponent.html",[0,0.413,1,0.773,2,1.432,3,0.533,4,0.463,5,1.203,6,1.203,7,1.203,8,1.203,9,0.463,11,1.203,12,2.163,13,1.94,15,1.597,17,1.597,23,0.041,30,0.687,31,0.608,32,0.533,33,0.687,34,1.203,35,1.597,36,1.597,37,1.203,38,1.909,39,1.203,40,1.026,41,1.203,42,0.687,43,1.203,44,0.687,45,1.203,46,1.091,47,1.203,48,0.687,49,1.203,50,0.773,51,1.203,52,0.687,53,0.533,54,1.203,55,0.687,56,0.968,57,1.203,58,1.203,59,0.03,60,0.03,218,2.568,219,4.979,220,4.674,221,4.165,222,3.409]],["title/components/RegisterComponent.html",[0,0.258,48,0.641]],["body/components/RegisterComponent.html",[0,0.347,1,0.559,2,1.142,3,0.385,4,0.335,5,0.87,6,0.87,7,0.87,8,0.87,9,0.335,11,0.87,12,2.024,13,1.815,15,1.273,17,1.273,19,0.439,20,0.818,22,0.86,23,0.042,28,1.35,30,0.947,31,0.439,32,0.385,33,0.497,34,0.87,35,1.273,36,1.273,37,0.87,38,1.657,39,0.87,40,1.065,41,0.87,42,0.497,43,0.87,44,0.497,45,0.87,46,0.497,47,0.87,48,0.947,49,0.87,50,0.559,51,0.87,52,0.497,53,0.385,54,0.87,55,0.497,56,0.699,57,0.87,58,0.87,59,0.024,60,0.024,93,1.382,101,1.086,110,2.634,120,1.273,121,0.87,122,1.585,123,1.849,124,2.393,125,2.634,127,1.421,128,1.421,129,2.32,136,0.87,143,1.382,146,0.971,147,1.382,158,2.113,159,2.113,162,0.971,169,1.585,199,1.585,223,1.856,224,3.927,225,3.32,226,4.322,227,3.32,228,3.32,229,3.32,230,4.964,231,2.268,232,2.268,233,2.268,234,2.268,235,2.069,236,3.927,237,3.927,238,2.268,239,2.268,240,2.268,241,2.268,242,2.268,243,2.268,244,2.393,245,2.268,246,2.268,247,2.268,248,2.268]],["title/interfaces/Todo.html",[53,0.497,249,1.575]],["body/interfaces/Todo.html",[3,0.54,4,0.47,9,0.47,19,0.616,20,1.035,21,3.051,22,1.14,23,0.043,24,2.288,32,0.85,53,0.714,59,0.03,60,0.03,139,2.396,158,1.711,159,1.711,178,1.711,194,1.711,244,1.938,249,2.261,250,2.222,251,1.938,252,3.172,253,3.051,254,3.498,255,3.438,256,3.438,257,3.172,258,3.172,259,2.868,260,2.222,261,3.438,262,1.711]],["title/components/TodoComponent.html",[0,0.258,50,0.721]],["body/components/TodoComponent.html",[0,0.314,1,0.474,2,1.009,3,0.327,4,0.284,5,0.737,6,0.737,7,0.737,8,0.737,9,0.284,11,0.737,12,1.942,13,1.742,15,1.125,17,1.125,19,0.372,20,0.723,22,0.989,23,0.043,25,0.737,26,0.661,28,1.796,30,0.642,31,0.372,32,0.327,33,0.421,34,0.737,35,1.125,36,1.125,37,0.737,38,1.526,39,0.737,40,0.723,41,0.737,42,0.421,43,0.737,44,0.421,45,0.737,46,0.421,47,0.737,48,0.421,49,0.737,50,0.981,51,0.737,52,0.421,53,0.844,54,0.737,55,0.421,56,0.593,57,0.737,58,0.737,59,0.021,60,0.021,120,1.125,121,1.364,136,1.644,139,0.92,150,1.172,154,1.788,162,1.834,195,1.172,235,1.906,259,1.788,263,1.573,264,3.557,265,2.933,266,2.933,267,3.557,268,3.557,269,3.557,270,3.557,271,4.286,272,2.933,273,2.933,274,3.557,275,3.557,276,3.557,277,3.557,278,2.933,279,1.922,280,4.965,281,1.922,282,1.922,283,1.922,284,1.922,285,1.922,286,1.922,287,1.922,288,1.922,289,1.922,290,1.922,291,4.286,292,1.922,293,1.922,294,1.922,295,1.922,296,1.922,297,1.922,298,1.922,299,1.922,300,1.922,301,1.922,302,1.922,303,1.922,304,2.933,305,4.518,306,4.518,307,2.933,308,2.933,309,2.933,310,3.98,311,2.933,312,2.933,313,2.933]],["title/components/TodoDetailsComponent.html",[0,0.258,52,0.641]],["body/components/TodoDetailsComponent.html",[0,0.406,1,0.746,2,1.399,3,0.515,4,0.447,5,1.161,6,1.161,7,1.161,8,1.161,9,0.447,11,1.161,12,2.149,13,1.928,15,1.56,17,1.56,23,0.041,30,0.663,31,0.586,32,0.515,33,0.663,34,1.161,35,1.56,36,1.56,37,1.161,38,1.882,39,1.161,40,1.002,41,1.161,42,0.663,43,1.161,44,0.663,45,1.161,46,0.663,47,1.161,48,0.663,49,1.161,50,0.746,51,1.161,52,1.075,53,0.952,54,1.161,55,0.663,56,0.934,57,1.161,58,1.161,59,0.029,60,0.029,87,1.846,222,3.329,314,2.479,315,2.479,316,4.909,317,4.592,318,4.067]],["title/components/TodosComponent.html",[0,0.258,55,0.641]],["body/components/TodosComponent.html",[0,0.311,1,0.467,2,0.998,3,0.322,4,0.28,5,0.727,6,0.727,7,0.727,8,0.727,9,0.28,11,0.727,12,1.935,13,1.736,15,1.113,17,1.113,19,0.367,20,0.715,21,1.769,22,0.984,23,0.043,24,1.691,25,1.113,26,0.998,28,1.608,30,0.772,31,0.367,32,0.322,33,0.415,34,0.727,35,1.113,36,1.113,37,0.727,38,1.515,39,0.727,40,1.049,41,0.727,42,0.415,43,0.727,44,0.415,45,0.727,46,0.415,47,0.727,48,0.415,49,0.727,50,0.467,51,0.727,52,0.415,53,0.857,54,0.727,55,0.865,56,1.385,57,0.727,58,0.727,59,0.021,60,0.021,104,1.325,120,1.113,121,0.727,127,1.509,128,1.509,136,1.352,146,0.811,162,1.823,169,1.325,172,2.375,185,2.127,195,1.155,196,1.551,199,1.325,252,1.155,253,2.409,257,1.155,258,1.155,262,2.418,319,1.551,320,3.527,321,2.902,322,3.527,323,3.234,324,2.375,325,2.902,326,1.895,327,2.902,328,2.902,329,1.895,330,2.375,331,1.895,332,1.895,333,1.895,334,1.551,335,1.895,336,1.895,337,1.895,338,1.895,339,1.895,340,2.902,341,1.895,342,1.895,343,1.895,344,1.895,345,1.895,346,1.895,347,1.895,348,1.895,349,1.895,350,1.895,351,1.895,352,1.895,353,1.895,354,2.375,355,3.527,356,1.895,357,2.902,358,1.895,359,1.895,360,1.895,361,1.895,362,1.895,363,1.895,364,1.895,365,2.375]],["title/injectables/TodosService.html",[141,1.401,185,1.575]],["body/injectables/TodosService.html",[3,0.299,4,0.26,9,0.26,14,1.072,19,0.341,20,0.675,22,1.121,23,0.043,24,1.44,25,1.29,26,1.157,28,1.76,30,0.902,31,0.341,32,0.299,33,0.385,40,1.16,53,0.929,56,1.038,59,0.02,60,0.02,82,1.23,120,1.051,121,0.675,127,2.015,128,2.015,136,1.805,141,1.312,142,1.072,144,1.23,146,0.753,149,3.38,150,1.072,162,1.44,185,1.475,194,2.45,195,1.072,235,1.971,252,2.051,253,2.657,254,2.352,262,1.811,323,2.243,324,2.243,330,2.243,334,1.44,354,3.109,366,1.23,367,1.44,368,2.74,369,2.74,370,3.799,371,2.74,372,2.74,373,2.74,374,1.44,375,3.109,376,2.74,377,2.243,378,2.74,379,1.76,380,2.74,381,1.76,382,2.74,383,1.76,384,2.74,385,1.76,386,3.365,387,1.76,388,2.74,389,1.76,390,1.76,391,2.74,392,1.76,393,1.76,394,1.76,395,2.74,396,1.76,397,2.74,398,1.76,399,1.44,400,1.072,401,1.44,402,3.109,403,1.76,404,2.754,405,3.365,406,3.365,407,3.365,408,2.754,409,1.76,410,1.76,411,1.76,412,1.76,413,4.117,414,1.76,415,1.76,416,2.74,417,1.76,418,1.76,419,1.76,420,1.76,421,1.76,422,1.76,423,1.76,424,1.76,425,1.76,426,1.76]],["title/interfaces/User.html",[178,1.575,249,1.575]],["body/interfaces/User.html",[3,0.52,4,0.452,9,0.452,19,0.592,20,1.009,21,1.864,22,1.125,23,0.043,24,2.403,32,0.837,53,0.52,59,0.029,60,0.029,139,2.531,158,2.652,159,2.652,178,2.203,194,1.646,244,3.004,249,2.203,250,2.137,251,1.864,252,3.131,253,1.864,254,3.444,256,3.35,257,3.131,258,3.131,259,2.812,260,3.444,261,3.35,262,1.646]],["title/injectables/UsersService.html",[123,1.252,141,1.401]],["body/injectables/UsersService.html",[3,0.393,4,0.341,9,0.341,14,1.409,19,0.448,20,0.829,22,1.015,23,0.043,24,2.233,25,1.291,26,1.158,28,1.794,30,0.955,31,0.448,32,0.393,33,0.506,40,0.978,59,0.024,60,0.024,82,1.616,104,1.616,107,1.812,110,2.052,120,1.291,121,0.887,123,1.441,127,1.699,128,1.699,136,1.855,139,1.612,141,1.612,142,1.409,144,1.616,146,0.989,149,3.048,158,2.494,159,2.137,162,1.441,179,3.569,235,1.901,244,1.409,255,2.755,260,3.381,366,1.616,374,1.892,375,3.569,377,2.755,399,1.892,400,1.409,401,1.892,402,1.892,404,1.892,408,1.892,427,1.892,428,4.361,429,4.361,430,4.361,431,3.367,432,2.312,433,2.312,434,2.312,435,3.367,436,2.312,437,2.312,438,3.367,439,2.312,440,3.367,441,3.367,442,2.312,443,3.367,444,2.312,445,2.312,446,2.312,447,2.312,448,2.312,449,3.367,450,3.367,451,2.312,452,2.312]],["title/coverage.html",[453,3.252]],["body/coverage.html",[0,0.486,1,0.766,9,0.459,10,2.543,22,0.681,23,0.042,42,0.681,44,0.681,46,0.681,48,0.681,50,0.766,52,0.681,53,0.528,55,0.681,59,0.03,60,0.03,87,1.894,102,1.894,117,2.172,119,2.543,123,1.33,141,1.981,155,2.543,173,2.543,178,1.672,185,1.672,218,2.543,223,2.543,235,1.488,249,2.227,251,2.522,263,2.543,314,2.543,315,2.543,319,2.543,367,2.543,400,2.522,427,2.543,453,2.543,454,3.108,455,3.108,456,3.108,457,5.806,458,3.108,459,3.108,460,4.138,461,3.108,462,3.108,463,3.108,464,4.96,465,4.138,466,3.108,467,3.108,468,2.543,469,4.138,470,2.543,471,3.108,472,3.108]],["title/dependencies.html",[64,2.142,473,1.715]],["body/dependencies.html",[23,0.043,31,0.721,59,0.033,60,0.033,64,2.27,76,3.806,79,3.806,80,3.25,93,2.27,101,1.783,142,2.27,474,3.724,475,5.716,476,3.724,477,3.724,478,3.724,479,3.724,480,3.724,481,3.724,482,3.724,483,3.724,484,3.724,485,3.724,486,3.724,487,3.724,488,3.724,489,3.724,490,3.724]],["title/miscellaneous/enumerations.html",[491,1.495,492,2.876]],["body/miscellaneous/enumerations.html",[19,0.775,23,0.042,26,1.951,59,0.035,60,0.035,194,2.617,251,2.441,257,3.32,258,3.32,259,2.964,262,2.617,491,2.441,492,3.277,493,4.863]],["title/index.html",[19,0.475,494,2.454,495,2.454]],["body/index.html",[0,0.409,4,0.456,23,0.03,27,2.527,40,0.761,59,0.03,60,0.03,72,1.882,145,2.527,235,1.478,365,2.527,473,2.158,496,4.12,497,3.087,498,4.637,499,4.637,500,2.527,501,3.087,502,3.087,503,4.12,504,5.154,505,5.413,506,3.087,507,3.087,508,3.087,509,3.087,510,3.087,511,3.087,512,3.087,513,3.087,514,3.087,515,3.087,516,3.087,517,4.637,518,4.637,519,3.087,520,4.947,521,3.087,522,3.087,523,3.087,524,3.087,525,4.12,526,4.12,527,4.947,528,3.087,529,4.12,530,4.12,531,3.087,532,5.302,533,3.087,534,3.087,535,3.087,536,4.12,537,3.087,538,3.087,539,3.087,540,3.087,541,3.087,542,4.637,543,3.087,544,3.087,545,3.087,546,2.158,547,3.087,548,3.087,549,3.087]],["title/modules.html",[63,2.139]],["body/modules.html",[23,0.037,59,0.037,60,0.037,62,2.688,63,2.374,69,2.374,80,3.082,550,4.41,551,4.41,552,5.151,553,4.41,554,4.41]],["title/overview.html",[546,2.777]],["body/overview.html",[1,1.353,2,1.127,23,0.041,42,1.046,44,1.046,46,1.046,48,1.046,50,1.177,52,1.046,55,1.046,59,0.031,60,0.031,62,3.619,63,1.764,64,2.612,65,2.683,66,2.683,67,2.683,68,2.683,69,2.57,70,3.508,71,2.683,72,1.998,100,1.998,117,2.291,250,2.291,366,2.291,546,2.291,555,4.775,556,3.278,557,3.278,558,3.278]],["title/properties.html",[20,0.866,473,1.715]],["body/properties.html",[20,1.117,23,0.04,59,0.038,60,0.038,500,3.712,559,4.536]],["title/routes.html",[100,2.422]],["body/routes.html",[23,0.038,59,0.038,60,0.038,100,2.804]],["title/miscellaneous/variables.html",[491,1.495,560,2.876]],["body/miscellaneous/variables.html",[19,0.766,22,1.057,23,0.042,25,1.851,26,1.66,59,0.035,60,0.035,150,2.41,154,2.41,400,3.306,468,3.237,470,3.237,491,2.41,560,3.237,561,3.955,562,3.955,563,4.826,564,4.826,565,4.826,566,4.826]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":559,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":217,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0/1",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":557,"title":{},"body":{"overview.html":{}}}],["1.1.19",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["15.2.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["15.2.4",{"_index":501,"title":{},"body":{"index.html":{}}}],["2",{"_index":555,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["209",{"_index":216,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5.2.3",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":558,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":556,"title":{},"body":{"overview.html":{}}}],["9",{"_index":242,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_http",{"_index":377,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["_router",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["_todoservice",{"_index":184,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_todosservice",{"_index":328,"title":{},"body":{"components/TodosComponent.html":{}}}],["_todosservice.filtertodo(res",{"_index":342,"title":{},"body":{"components/TodosComponent.html":{}}}],["_userservice",{"_index":187,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_usersservice",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroutesnapshot",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["add",{"_index":365,"title":{},"body":{"components/TodosComponent.html":{},"index.html":{}}}],["addtodo",{"_index":323,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["addtodo(todotitle",{"_index":378,"title":{},"body":{"injectables/TodosService.html":{}}}],["alert('please",{"_index":170,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('you",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":498,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["app.component",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":510,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":406,"title":{},"body":{"injectables/TodosService.html":{}}}],["appmodule",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":69,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":521,"title":{},"body":{"index.html":{}}}],["auth.guard",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticateuser",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["authguard",{"_index":102,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":407,"title":{},"body":{"injectables/TodosService.html":{}}}],["automatically",{"_index":511,"title":{},"body":{"index.html":{}}}],["available",{"_index":554,"title":{},"body":{"modules.html":{}}}],["background",{"_index":213,"title":{},"body":{"components/NavbarComponent.html":{}}}],["baseurl",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bees",{"_index":312,"title":{},"body":{"components/TodoComponent.html":{}}}],["behaviorsubject",{"_index":399,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["behaviorsubject(false",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["behaviorsubject(todofilter.all",{"_index":395,"title":{},"body":{"injectables/TodosService.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["break",{"_index":357,"title":{},"body":{"components/TodosComponent.html":{}}}],["browse",{"_index":552,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":520,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":540,"title":{},"body":{"index.html":{}}}],["case",{"_index":354,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["change",{"_index":513,"title":{},"body":{"index.html":{}}}],["check",{"_index":545,"title":{},"body":{"index.html":{}}}],["choice",{"_index":535,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["cli",{"_index":499,"title":{},"body":{"index.html":{}}}],["close",{"_index":310,"title":{},"body":{"components/TodoComponent.html":{}}}],["cluster_appmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":515,"title":{},"body":{"index.html":{}}}],["color",{"_index":214,"title":{},"body":{"components/NavbarComponent.html":{}}}],["command",{"_index":536,"title":{},"body":{"index.html":{}}}],["completed",{"_index":257,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["completetodo",{"_index":267,"title":{},"body":{"components/TodoComponent.html":{}}}],["completetodo():void",{"_index":298,"title":{},"body":{"components/TodoComponent.html":{}}}],["completetodoevent",{"_index":274,"title":{},"body":{"components/TodoComponent.html":{}}}],["compodoc/compodoc",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"overview.html":{}}}],["confirmremovetodo",{"_index":268,"title":{},"body":{"components/TodoComponent.html":{}}}],["confirmremovetodo():void",{"_index":294,"title":{},"body":{"components/TodoComponent.html":{}}}],["console.log(err",{"_index":172,"title":{},"body":{"components/LoginComponent.html":{},"components/TodosComponent.html":{}}}],["console.log(err.error",{"_index":248,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(regform.value",{"_index":245,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(res",{"_index":345,"title":{},"body":{"components/TodosComponent.html":{}}}],["console.log(selectedtodo",{"_index":363,"title":{},"body":{"components/TodosComponent.html":{}}}],["console.log(this.todos",{"_index":348,"title":{},"body":{"components/TodosComponent.html":{}}}],["console.log(value",{"_index":362,"title":{},"body":{"components/TodosComponent.html":{}}}],["const",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TodosComponent.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["constructor(_http",{"_index":374,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["constructor(_todosservice",{"_index":326,"title":{},"body":{"components/TodosComponent.html":{}}}],["constructor(_userservice",{"_index":183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(_usersservice",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(private",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":405,"title":{},"body":{"injectables/TodosService.html":{}}}],["coverage",{"_index":453,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":306,"title":{},"body":{"components/TodoComponent.html":{}}}],["deleted",{"_index":259,"title":{},"body":{"interfaces/Todo.html":{},"components/TodoComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["deletetodo",{"_index":324,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["deletetodo(todo",{"_index":330,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["deletetodoevent",{"_index":275,"title":{},"body":{"components/TodoComponent.html":{}}}],["deletetodopermanent",{"_index":368,"title":{},"body":{"injectables/TodosService.html":{}}}],["deletetodopermanent(todo",{"_index":382,"title":{},"body":{"injectables/TodosService.html":{}}}],["dependencies",{"_index":64,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["details",{"_index":316,"title":{},"body":{"components/TodoDetailsComponent.html":{}}}],["details'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["details.component",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":317,"title":{},"body":{"components/TodoDetailsComponent.html":{}}}],["details.component.html",{"_index":318,"title":{},"body":{"components/TodoDetailsComponent.html":{}}}],["details.component.ts",{"_index":315,"title":{},"body":{"components/TodoDetailsComponent.html":{},"coverage.html":{}}}],["details/todo",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":507,"title":{},"body":{"index.html":{}}}],["development",{"_index":502,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["directives",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":519,"title":{},"body":{"index.html":{}}}],["directory",{"_index":524,"title":{},"body":{"index.html":{}}}],["dist",{"_index":523,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["dynamic",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":533,"title":{},"body":{"index.html":{}}}],["edittodostatus",{"_index":325,"title":{},"body":{"components/TodosComponent.html":{}}}],["edittodostatus(selectedtodo",{"_index":332,"title":{},"body":{"components/TodosComponent.html":{}}}],["edittodostatus(selectedtodo:todo",{"_index":351,"title":{},"body":{"components/TodosComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["end",{"_index":532,"title":{},"body":{"index.html":{}}}],["enter",{"_index":171,"title":{},"body":{"components/LoginComponent.html":{}}}],["enum",{"_index":261,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{}}}],["enumerations",{"_index":492,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":400,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":169,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{}}}],["error",{"_index":349,"title":{},"body":{"components/TodosComponent.html":{}}}],["error(err",{"_index":364,"title":{},"body":{"components/TodosComponent.html":{}}}],["eventemitter",{"_index":280,"title":{},"body":{"components/TodoComponent.html":{}}}],["execute",{"_index":529,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["false",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"miscellaneous/variables.html":{}}}],["favourite",{"_index":258,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["favouritetodoevent",{"_index":276,"title":{},"body":{"components/TodoComponent.html":{}}}],["favtodo",{"_index":269,"title":{},"body":{"components/TodoComponent.html":{}}}],["favtodo():void",{"_index":300,"title":{},"body":{"components/TodoComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":514,"title":{},"body":{"index.html":{}}}],["filter",{"_index":386,"title":{},"body":{"injectables/TodosService.html":{}}}],["filtertodo",{"_index":369,"title":{},"body":{"injectables/TodosService.html":{}}}],["filtertodo(filter",{"_index":384,"title":{},"body":{"injectables/TodosService.html":{}}}],["first",{"_index":538,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":232,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formcontrol(null",{"_index":236,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup",{"_index":230,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalues",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["full",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":541,"title":{},"body":{"index.html":{}}}],["generate",{"_index":517,"title":{},"body":{"index.html":{}}}],["generated",{"_index":497,"title":{},"body":{"index.html":{}}}],["getting",{"_index":494,"title":{"index.html":{}},"body":{}}],["gettodos",{"_index":370,"title":{},"body":{"injectables/TodosService.html":{}}}],["getuser",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["go",{"_index":544,"title":{},"body":{"index.html":{}}}],["graph",{"_index":553,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":117,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["headers",{"_index":404,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["hello2",{"_index":304,"title":{},"body":{"components/TodoComponent.html":{}}}],["help",{"_index":542,"title":{},"body":{"index.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["http://localhost:3000",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":509,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":375,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":402,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["httpheaders().set(\"authorization",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpoptions",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["icons",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":252,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":141,"title":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":366,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":290,"title":{},"body":{"components/TodoComponent.html":{}}}],["input()todo!:todo",{"_index":293,"title":{},"body":{"components/TodoComponent.html":{}}}],["inputs",{"_index":272,"title":{},"body":{"components/TodoComponent.html":{}}}],["interface",{"_index":249,"title":{"interfaces/Todo.html":{},"interfaces/User.html":{}},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":250,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isloggedin",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["islogin",{"_index":177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item",{"_index":309,"title":{},"body":{"components/TodoComponent.html":{}}}],["karma",{"_index":531,"title":{},"body":{"index.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["lib",{"_index":195,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["literal",{"_index":255,"title":{},"body":{"interfaces/Todo.html":{},"injectables/UsersService.html":{}}}],["localstorage.getitem('token",{"_index":408,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["localstorage.setitem('token',res.token",{"_index":168,"title":{},"body":{"components/LoginComponent.html":{}}}],["log",{"_index":210,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logged",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loggedin",{"_index":260,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["login",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UsersService.html":{}}}],["login'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["login(username",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["login.component.css",{"_index":156,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":157,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":42,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":179,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UsersService.html":{}}}],["matching",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["methods",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":491,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":61,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":543,"title":{},"body":{"index.html":{}}}],["mynav",{"_index":212,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mytodolist",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["navbar",{"_index":174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["navbar.component.css",{"_index":175,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["navbarcomponent",{"_index":44,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":508,"title":{},"body":{"index.html":{}}}],["need",{"_index":537,"title":{},"body":{"index.html":{}}}],["new",{"_index":235,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["newtodotitle",{"_index":322,"title":{},"body":{"components/TodosComponent.html":{}}}],["next",{"_index":344,"title":{},"body":{"components/TodosComponent.html":{}}}],["next(value",{"_index":361,"title":{},"body":{"components/TodosComponent.html":{}}}],["next:(result",{"_index":339,"title":{},"body":{"components/TodosComponent.html":{}}}],["ng",{"_index":505,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":164,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfound",{"_index":219,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["notfound.component.css",{"_index":220,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.html",{"_index":221,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound/notfound.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfoundcomponent",{"_index":46,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["number",{"_index":254,"title":{},"body":{"interfaces/Todo.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{}}}],["object",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["opendeletemodal",{"_index":266,"title":{},"body":{"components/TodoComponent.html":{}}}],["opendeletemodal:boolean",{"_index":292,"title":{},"body":{"components/TodoComponent.html":{}}}],["optional",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":291,"title":{},"body":{"components/TodoComponent.html":{}}}],["outputs",{"_index":273,"title":{},"body":{"components/TodoComponent.html":{}}}],["overview",{"_index":546,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":473,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":548,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":158,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["path",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["platform",{"_index":534,"title":{},"body":{"index.html":{}}}],["popper.js",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["production",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":496,"title":{},"body":{"index.html":{}}}],["promise",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providedin",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["quote",{"_index":244,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["reactiveformsmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":256,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{}}}],["redirectto",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":547,"title":{},"body":{"index.html":{}}}],["regform",{"_index":226,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{}}}],["register'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["register(formvalues",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["register.component.css",{"_index":224,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":225,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":48,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registeruser",{"_index":227,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser(regform",{"_index":229,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":512,"title":{},"body":{"index.html":{}}}],["removetodo",{"_index":270,"title":{},"body":{"components/TodoComponent.html":{}}}],["removetodo():void",{"_index":296,"title":{},"body":{"components/TodoComponent.html":{}}}],["res",{"_index":199,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodosComponent.html":{}}}],["res.data",{"_index":346,"title":{},"body":{"components/TodosComponent.html":{}}}],["reset",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result.data",{"_index":341,"title":{},"body":{"components/TodosComponent.html":{}}}],["results",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["rgba(219",{"_index":215,"title":{},"body":{"components/NavbarComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["route",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":99,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":100,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":504,"title":{},"body":{"index.html":{}}}],["running",{"_index":525,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":516,"title":{},"body":{"index.html":{}}}],["selectedtodo",{"_index":334,"title":{},"body":{"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["selectedtodo.status[statustype",{"_index":416,"title":{},"body":{"injectables/TodosService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["serve",{"_index":506,"title":{},"body":{"index.html":{}}}],["server",{"_index":503,"title":{},"body":{"index.html":{}}}],["setfilter",{"_index":371,"title":{},"body":{"injectables/TodosService.html":{}}}],["setfilter(filter",{"_index":388,"title":{},"body":{"injectables/TodosService.html":{}}}],["showcompeleted",{"_index":180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showdeleted",{"_index":181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showfav",{"_index":182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["src/.../environment.prod.ts",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lib.ts",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":97,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:11",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:9",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/lib.ts",{"_index":251,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/login/login.component.ts",{"_index":155,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:12",{"_index":163,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:13",{"_index":160,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":161,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":173,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:13",{"_index":193,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:14",{"_index":186,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:26",{"_index":192,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:30",{"_index":191,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:34",{"_index":190,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:39",{"_index":189,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:42",{"_index":188,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notfound/notfound.component.ts",{"_index":218,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts",{"_index":223,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:12",{"_index":228,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":231,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/todo",{"_index":314,"title":{},"body":{"components/TodoDetailsComponent.html":{},"coverage.html":{}}}],["src/app/todo/todo.component.ts",{"_index":263,"title":{},"body":{"components/TodoComponent.html":{},"coverage.html":{}}}],["src/app/todo/todo.component.ts:11",{"_index":278,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:15",{"_index":279,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:16",{"_index":282,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:17",{"_index":281,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:18",{"_index":283,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:19",{"_index":284,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:21",{"_index":286,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:25",{"_index":288,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:29",{"_index":285,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:32",{"_index":287,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:36",{"_index":289,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todos.service.ts",{"_index":367,"title":{},"body":{"injectables/TodosService.html":{},"coverage.html":{}}}],["src/app/todos.service.ts:12",{"_index":396,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:13",{"_index":398,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:15",{"_index":376,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:20",{"_index":379,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:29",{"_index":387,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:38",{"_index":394,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:47",{"_index":381,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:51",{"_index":392,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:55",{"_index":389,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:59",{"_index":385,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos.service.ts:75",{"_index":383,"title":{},"body":{"injectables/TodosService.html":{}}}],["src/app/todos/todos.component.ts",{"_index":319,"title":{},"body":{"components/TodosComponent.html":{},"coverage.html":{}}}],["src/app/todos/todos.component.ts:11",{"_index":336,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:12",{"_index":335,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:13",{"_index":327,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:26",{"_index":329,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:44",{"_index":331,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/todos/todos.component.ts:48",{"_index":333,"title":{},"body":{"components/TodosComponent.html":{}}}],["src/app/users.service.ts",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/users.service.ts:11",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:12",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:16",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:20",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:24",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:28",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:32",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/users.service.ts:36",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment.prod",{"_index":401,"title":{},"body":{"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["src/environments/environment.prod.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":495,"title":{"index.html":{}},"body":{}}],["state",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":253,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{}}}],["status:string",{"_index":352,"title":{},"body":{"components/TodosComponent.html":{}}}],["statustype",{"_index":391,"title":{},"body":{"injectables/TodosService.html":{}}}],["statustype:todostatus",{"_index":415,"title":{},"body":{"injectables/TodosService.html":{}}}],["stored",{"_index":522,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["successfuly",{"_index":313,"title":{},"body":{"components/TodoComponent.html":{}}}],["support",{"_index":550,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":307,"title":{},"body":{"components/TodoComponent.html":{}}}],["svg",{"_index":551,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":419,"title":{},"body":{"injectables/TodosService.html":{}}}],["switch(status",{"_index":353,"title":{},"body":{"components/TodosComponent.html":{}}}],["table",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":311,"title":{},"body":{"components/TodoComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["test",{"_index":528,"title":{},"body":{"index.html":{}}}],["testing",{"_index":539,"title":{},"body":{"index.html":{}}}],["tests",{"_index":527,"title":{},"body":{"index.html":{}}}],["this._http.delete(`${environment.baseurl}/todos/${id",{"_index":426,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.get(`${environment.baseurl}todos",{"_index":409,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.get(`${environment.baseurl}users",{"_index":452,"title":{},"body":{"injectables/UsersService.html":{}}}],["this._http.patch(`${environment.baseurl}todos/${todo.id}`,{status",{"_index":411,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.post(`${environment.baseurl}todos`,{title",{"_index":403,"title":{},"body":{"injectables/TodosService.html":{}}}],["this._http.post(`${environment.baseurl}users",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["this._http.post(`${environment.baseurl}users/signin",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["this._router.navigate",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this._router.navigate(['/login",{"_index":247,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._router.navigate(['/register",{"_index":208,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._router.navigate(['/todos/compeleted",{"_index":207,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._router.navigate(['/todos/deleted",{"_index":205,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._router.navigate(['/todos/favourite",{"_index":203,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todoservice.setfilter(todofilter.completed",{"_index":206,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todoservice.setfilter(todofilter.deleted",{"_index":204,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todoservice.setfilter(todofilter.favourite",{"_index":202,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todosservice.addtodo(this.newtodotitle).subscribe",{"_index":343,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.deletetodo(todo",{"_index":350,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.gettodos().subscribe",{"_index":338,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.status$.subscribe((res",{"_index":337,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.toggletodostatus(selectedtodo",{"_index":359,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._todosservice.updatetodos(selectedtodo).subscribe",{"_index":360,"title":{},"body":{"components/TodosComponent.html":{}}}],["this._userservice.getuser().subscribe(res",{"_index":200,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._userservice.loggedin$.subscribe((res",{"_index":197,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._userservice.logout",{"_index":209,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._usersservice.authenticateuser",{"_index":167,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._usersservice.isloggedin",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._usersservice.login(this.username",{"_index":165,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._usersservice.register(regform.value).subscribe",{"_index":246,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.completetodoevent.emit(this.todo.id",{"_index":299,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.deletetodoevent.emit(this.todo",{"_index":297,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.favouritetodoevent.emit(this.todo.id",{"_index":301,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.islogin",{"_index":198,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedin.asobservable",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.loggedin.getvalue",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.loggedin.next(false",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.loggedin.next(true",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.opendeletemodal",{"_index":295,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.password).subscribe((res:any",{"_index":166,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.regform",{"_index":234,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.status.asobservable",{"_index":397,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.status.next(filter",{"_index":417,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos",{"_index":340,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.todos.filter",{"_index":418,"title":{},"body":{"injectables/TodosService.html":{}}}],["this.todos.push({id",{"_index":347,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.todostatus",{"_index":355,"title":{},"body":{"components/TodosComponent.html":{}}}],["this.undodeleteevent.emit(this.todo",{"_index":303,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.user",{"_index":201,"title":{},"body":{"components/NavbarComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"components/TodosComponent.html":{},"interfaces/User.html":{}}}],["todo",{"_index":53,"title":{"interfaces/Todo.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["todo'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["todo.component.css",{"_index":264,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo.component.html",{"_index":265,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo.status",{"_index":412,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.status.completed",{"_index":421,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.status.deleted",{"_index":413,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.status.favourite",{"_index":423,"title":{},"body":{"injectables/TodosService.html":{}}}],["todo.title",{"_index":305,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo/:id",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todo/todo.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["todocomponent",{"_index":50,"title":{"components/TodoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tododetailscomponent",{"_index":52,"title":{"components/TodoDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todofilter",{"_index":194,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["todofilter.all",{"_index":425,"title":{},"body":{"injectables/TodosService.html":{}}}],["todofilter.completed",{"_index":420,"title":{},"body":{"injectables/TodosService.html":{}}}],["todofilter.deleted",{"_index":424,"title":{},"body":{"injectables/TodosService.html":{}}}],["todofilter.favourite",{"_index":422,"title":{},"body":{"injectables/TodosService.html":{}}}],["todolist_project",{"_index":549,"title":{},"body":{"index.html":{}}}],["todos",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{}}}],["todos.component.css",{"_index":320,"title":{},"body":{"components/TodosComponent.html":{}}}],["todos.component.html",{"_index":321,"title":{},"body":{"components/TodosComponent.html":{}}}],["todos.service",{"_index":196,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodosComponent.html":{}}}],["todos/:status",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todos/all",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todos/todos.component",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["todoscomponent",{"_index":55,"title":{"components/TodosComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todosservice",{"_index":185,"title":{"injectables/TodosService.html":{}},"body":{"components/NavbarComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"coverage.html":{}}}],["todostatus",{"_index":262,"title":{},"body":{"interfaces/Todo.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["todostatus.completed",{"_index":356,"title":{},"body":{"components/TodosComponent.html":{}}}],["todostatus.favourite",{"_index":358,"title":{},"body":{"components/TodosComponent.html":{}}}],["todotitle",{"_index":380,"title":{},"body":{"injectables/TodosService.html":{}}}],["toggletodostatus",{"_index":372,"title":{},"body":{"injectables/TodosService.html":{}}}],["toggletodostatus(selectedtodo",{"_index":390,"title":{},"body":{"injectables/TodosService.html":{}}}],["toggletodostatus(selectedtodo:todo",{"_index":414,"title":{},"body":{"injectables/TodosService.html":{}}}],["token",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["true",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"components/TodoComponent.html":{},"injectables/TodosService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undo",{"_index":271,"title":{},"body":{"components/TodoComponent.html":{}}}],["undo():void",{"_index":302,"title":{},"body":{"components/TodoComponent.html":{}}}],["undodeleteevent",{"_index":277,"title":{},"body":{"components/TodoComponent.html":{}}}],["unit",{"_index":526,"title":{},"body":{"index.html":{}}}],["updatetodos",{"_index":373,"title":{},"body":{"injectables/TodosService.html":{}}}],["updatetodos(todo",{"_index":393,"title":{},"body":{"injectables/TodosService.html":{}}}],["updatetodos(todo:todo",{"_index":410,"title":{},"body":{"injectables/TodosService.html":{}}}],["urltree",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":518,"title":{},"body":{"index.html":{}}}],["user",{"_index":178,"title":{"interfaces/User.html":{}},"body":{"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user.username",{"_index":211,"title":{},"body":{"components/NavbarComponent.html":{}}}],["username",{"_index":159,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Todo.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["usersservice",{"_index":123,"title":{"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["validators",{"_index":233,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":238,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(5",{"_index":243,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern('[a",{"_index":239,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":237,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodoDetailsComponent.html":{},"components/TodosComponent.html":{}}}],["variable",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":560,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":500,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":530,"title":{},"body":{"index.html":{}}}],["void",{"_index":162,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"components/TodosComponent.html":{},"injectables/TodosService.html":{},"injectables/UsersService.html":{}}}],["want",{"_index":308,"title":{},"body":{"components/TodoComponent.html":{}}}],["works",{"_index":222,"title":{},"body":{"components/NotfoundComponent.html":{},"components/TodoDetailsComponent.html":{}}}],["z0",{"_index":241,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":240,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myTodoList'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myTodoList';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nAppModule -->\n\nTodoComponent->AppModule\n\n\n\n\n\nTodoDetailsComponent\n\nTodoDetailsComponent\n\nAppModule -->\n\nTodoDetailsComponent->AppModule\n\n\n\n\n\nTodosComponent\n\nTodosComponent\n\nAppModule -->\n\nTodosComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotfoundComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TodoComponent\n                        \n                        \n                            TodoDetailsComponent\n                        \n                        \n                            TodosComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { TodosComponent } from './todos/todos.component';\nimport { TodoDetailsComponent } from './todo-details/todo-details.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent,\n    TodosComponent,\n    TodoDetailsComponent,\n    NavbarComponent,\n    LoginComponent,\n    NotfoundComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TodoDetailsComponent } from './todo-details/todo-details.component';\nimport { TodosComponent } from './todos/todos.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'todos', redirectTo: 'todos/all', pathMatch: 'full'},\n  { path: 'todos/:status', component: TodosComponent, canActivate: [AuthGuard] },\n  { path: 'todo/:id', component: TodoDetailsComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotfoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_usersService: UsersService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _usersService: UsersService, private _router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    if (this._usersService.isLoggedIn()) {\n      return true;\n    }\n    else {\n      alert('You are not logged in')\n      this._router.navigate(['/', 'login']);\n      return false;\n    }\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_UsersService: UsersService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _UsersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n\n  constructor(private _UsersService: UsersService, private _router: Router) {\n\n  }\n  login() {\n    this._UsersService.login(this.username, this.password).subscribe((res:any) => {\n      this._UsersService.AuthenticateUser();\n      this._router.navigate(['/', 'todos', 'all']);\n      localStorage.setItem('token',res.token);\n    },\n      (err) => {\n        alert('Please enter username and password');\n        console.log(err)\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            username\n            \n        \n        Password\n        \n        login\n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        username                            Password                login    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                showCompeleted\n                            \n                            \n                                showDeleted\n                            \n                            \n                                showFav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UsersService, _router: Router, _todoService: TodosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _todoService\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showCompeleted\n                        \n                    \n                \n            \n            \n                \nshowCompeleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleted\n                        \n                    \n                \n            \n            \n                \nshowDeleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFav\n                        \n                    \n                \n            \n            \n                \nshowFav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TodoFilter } from '../lib';\nimport { TodosService } from '../todos.service';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  isLogin: boolean = false;\n  user: any;\n  constructor(private _userService: UsersService, private _router: Router, private _todoService: TodosService) {\n    this._userService.loggedIn$.subscribe((res) => {\n      this.isLogin = res\n    })\n\n    this._userService.getUser().subscribe(res => {      \n      this.user = res;\n    })\n    \n  }\n\n  showFav() {\n    this._todoService.setFilter(TodoFilter.FAVOURITE)\n    this._router.navigate(['/todos/favourite'])\n  }\n  showDeleted() {\n    this._todoService.setFilter(TodoFilter.DELETED)\n    this._router.navigate(['/todos/deleted'])\n  }\n  showCompeleted() {\n    this._todoService.setFilter(TodoFilter.COMPLETED)\n    this._router.navigate(['/todos/compeleted'])\n  }\n\n  register() {\n    this._router.navigate(['/register'])\n  }\n  logout() {\n    this._userService.logout()\n    this._router.navigate(['/'])\n  }\n}\n\n    \n\n    \n        \n    \n        \n             Register\n             Login\n        \n        Log Out\n        \n\n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                    {{user.userName}}\n                \n            \n\n            \n                \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .myNav {\n  background-color: rgba(219, 209, 209, 0.15);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Register             Login                Log Out                                                                                                                                                                                                                                                                                            {{user.userName}}                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notfound/notfound.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n            \n                styleUrls\n                ./notfound.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent {\n\n}\n\n    \n\n    \n        notfound works!\n\n    \n\n    \n                \n                    ./notfound.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notfound works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                regForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_usersService: UsersService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(regForm: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regForm\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        regForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  regForm: FormGroup;\n  constructor(private _usersService: UsersService, private _router: Router) {\n    this.regForm = new FormGroup({\n      userName: new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      password: new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z0-9]*'), Validators.minLength(5)]),\n      quote: new FormControl(null, [Validators.required]),\n    })\n\n  }\n  registerUser(regForm: FormGroup) {\n    console.log(regForm.value);\n\n    this._usersService.register(regForm.value).subscribe(\n      (res) => {\n        this._router.navigate(['/login'])\n      },\n      (err) => {\n        console.log(err.error)\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        Username\n        \n        Password\n        \n        Quote\n        \n        register\n    \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Username                Password                Quote                register    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Todo {\n  readonly id: number;\n  title: string;\n  status: {\n    completed: boolean;\n    favourite: boolean;\n    deleted: boolean;\n  };\n}\nexport interface User {\n  readonly id: number;\n  username: string;\n  quote: string;\n  loggedIn: boolean;\n  password: string;\n}\n\nexport enum TodoFilter {\n  ALL = 'all',\n  FAVOURITE = 'favourite ',\n  COMPLETED = 'completed',\n  DELETED = 'deleted',\n}\n\nexport enum TodoStatus {\n  FAVOURITE = 'favourite',\n  COMPLETED = 'completed',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoComponent.html":{"url":"components/TodoComponent.html","title":"component - TodoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo/todo.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo\n            \n\n            \n                styleUrls\n                ./todo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                openDeleteModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                completeTodo\n                            \n                            \n                                confirmRemoveTodo\n                            \n                            \n                                favTodo\n                            \n                            \n                                removeTodo\n                            \n                            \n                                undo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                todo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                completeTodoEvent\n                            \n                            \n                                deleteTodoEvent\n                            \n                            \n                                favouriteTodoEvent\n                            \n                            \n                                undoDeleteEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/todo/todo.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        todo\n                    \n                \n                \n                    \n                        Type :         Todo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        completeTodoEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteTodoEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        favouriteTodoEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        undoDeleteEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/todo/todo.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        completeTodo\n                        \n                    \n                \n            \n            \n                \ncompleteTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmRemoveTodo\n                        \n                    \n                \n            \n            \n                \nconfirmRemoveTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favTodo\n                        \n                    \n                \n            \n            \n                \nfavTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTodo\n                        \n                    \n                \n            \n            \n                \nremoveTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo/todo.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/todo/todo.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Todo } from '../lib';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent {\n  \n openDeleteModal:boolean = false;\n constructor(){\n  \n }\n  @Input()todo!:Todo;\n  @Output() deleteTodoEvent = new EventEmitter();\n  @Output() completeTodoEvent = new EventEmitter();\n  @Output() favouriteTodoEvent = new EventEmitter();\n  @Output() undoDeleteEvent = new EventEmitter();\n\n  confirmRemoveTodo():void {\n    this.openDeleteModal = true;\n  }\n\n  removeTodo():void{    \n    this.deleteTodoEvent.emit(this.todo); \n  }\n\n  completeTodo():void{\n    this.completeTodoEvent.emit(this.todo.id); \n  }  \n  favTodo():void{\n    this.favouriteTodoEvent.emit(this.todo.id); \n  }\n\n  undo():void{\n    this.undoDeleteEvent.emit(this.todo);\n  }\n}\n\n\n    \n\n    \n        \n\n  \n  hello2 {{ todo.title }} \n\n  \n\n    \n       \n\n    \n    \n      Delete\n    \n  \n\n\n\n\n\n  \n    \n      \n        {{todo.title}}\n        \n      \n      \n        Are you sure you want to delete this item?\n      \n      \n        Close\n        Delete Todo\n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n      \n      \n         {{todo.title}} task has bees deleted successfuly .\n      \n      \n        Close\n        Undo -->\n      \n    \n  \n\n    \n\n    \n                \n                    ./todo.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    hello2 {{ todo.title }}                            Delete                          {{todo.title}}                            Are you sure you want to delete this item?                    Close        Delete Todo                                                     {{todo.title}} task has bees deleted successfuly .                    Close        Undo -->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoDetailsComponent.html":{"url":"components/TodoDetailsComponent.html","title":"component - TodoDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo-details/todo-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-details\n            \n\n            \n                styleUrls\n                ./todo-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-details',\n  templateUrl: './todo-details.component.html',\n  styleUrls: ['./todo-details.component.css']\n})\nexport class TodoDetailsComponent {\n\n}\n\n    \n\n    \n        todo-details works!\n\n    \n\n    \n                \n                    ./todo-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'todo-details works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodosComponent.html":{"url":"components/TodosComponent.html","title":"component - TodosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todos/todos.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todos\n            \n\n            \n                styleUrls\n                ./todos.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todos.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTodoTitle\n                            \n                            \n                                todos\n                            \n                            \n                                todoStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                editTodoStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_todosService: TodosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/todos/todos.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _todosService\n                                                  \n                                                        \n                                                                        TodosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos/todos.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos/todos.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTodoStatus\n                        \n                    \n                \n            \n            \n                \neditTodoStatus(selectedTodo: Todo, status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos/todos.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedTodo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newTodoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todos/todos.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/todos/todos.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todoStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TodoStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todos/todos.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Todo, TodoStatus } from '../lib';\nimport { TodosService } from '../todos.service';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent {\n  todos: Todo[] = [];\n  newTodoTitle: string = '';\n  todoStatus!: TodoStatus  ;\n\n  constructor(private _todosService: TodosService) {\n\n    this._todosService.status$.subscribe((res) => {\n      this._todosService.getTodos().subscribe({\n        next:(result) => {\n          this.todos = result.data;\n      }} );\n      this.todos = _todosService.filterTodo(res);\n    })\n  }\n\n  addTodo() {    \n    this._todosService.addTodo(this.newTodoTitle).subscribe({\n      next: (res) => \n      { \n        console.log(res);\n        \n        const {title, status, id} = res.data\n        this.todos.push({id, title, ...status})  \n        console.log(this.todos);\n              \n           },\n      error: (err) => {\n        console.log(err);\n      }\n  });\n\n  }\n\n  deleteTodo(todo: Todo): void {\n    this._todosService.deleteTodo(todo);\n  }\n \n  editTodoStatus(selectedTodo:Todo , status:string): void {\n        switch(status)\n         {\n          case 'completed':\n              this.todoStatus = TodoStatus.COMPLETED\n            break;\n\n            case 'favourite':\n              this.todoStatus = TodoStatus.FAVOURITE\n            break;\n        }        \n        this._todosService.toggleTodoStatus(selectedTodo, this.todoStatus);\n        this._todosService.updateTodos(selectedTodo).subscribe({\n          next(value) {\n            console.log(value);\n            console.log(selectedTodo);\n            \n          },\n          error(err) {\n            console.log(err);\n            \n          },\n        })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    Add\n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./todos.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Add                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'},{'name': 'TodoDetailsComponent', 'selector': 'app-todo-details'},{'name': 'TodosComponent', 'selector': 'app-todos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodosService.html":{"url":"injectables/TodosService.html","title":"injectable - TodosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TodosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/todos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                status$\n                            \n                            \n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                deleteTodoPermanent\n                            \n                            \n                                filterTodo\n                            \n                            \n                                getTodos\n                            \n                            \n                                setFilter\n                            \n                            \n                                toggleTodoStatus\n                            \n                            \n                                updateTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/todos.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo(todoTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodoPermanent\n                        \n                    \n                \n            \n            \n                \ndeleteTodoPermanent(todo: Todo, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterTodo\n                        \n                    \n                \n            \n            \n                \nfilterTodo(filter: TodoFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                TodoFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Todo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodos\n                        \n                    \n                \n            \n            \n                \ngetTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(filter: TodoFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                TodoFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTodoStatus\n                        \n                    \n                \n            \n            \n                \ntoggleTodoStatus(selectedTodo: Todo, statusType: TodoStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedTodo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusType\n                                    \n                                                TodoStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTodos\n                        \n                    \n                \n            \n            \n                \nupdateTodos(todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/todos.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(TodoFilter.ALL)\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.status.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/todos.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Todo, TodoFilter, TodoStatus } from './lib';\nimport { environment } from 'src/environments/environment.prod';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TodosService {\n\n  status = new BehaviorSubject(TodoFilter.ALL);\n  status$ = this.status.asObservable();\n\n  todos: Todo[] = [];\n\n   constructor(private _http: HttpClient) { }\n\n\n  addTodo(todoTitle: string ) {\n   return this._http.post(`${environment.baseUrl}todos`,{title: todoTitle},{\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      Authorization: `${localStorage.getItem('token')}`\n    })\n  })}\n\n\n  getTodos(){\n    return this._http.get(`${environment.baseUrl}todos`,{\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: `${localStorage.getItem('token')}`\n      })\n    })\n  }\n  \n  updateTodos(todo:Todo){\n    return this._http.patch(`${environment.baseUrl}todos/${todo.id}`,{status: todo.status},{\n            headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: `${localStorage.getItem('token')}`\n      })\n    })\n  }\n\n  deleteTodo(todo: Todo) {\n    todo.status.deleted = true;\n  }\n\n  toggleTodoStatus(selectedTodo:Todo, statusType:TodoStatus) {\n    selectedTodo.status[statusType] = ! selectedTodo.status[statusType];\n  }\n\n  setFilter(filter: TodoFilter) {\n    this.status.next(filter)\n  }\n\n  filterTodo(filter: TodoFilter): Todo[] {\n    return this.todos.filter(\n      (todo) => {\n        switch (filter) {\n          case TodoFilter.COMPLETED:\n            return todo.status.completed && !todo.status.deleted\n          case TodoFilter.FAVOURITE:\n            return todo.status.favourite && !todo.status.deleted\n          case TodoFilter.DELETED:\n            return todo.status.deleted\n            case TodoFilter.ALL:\n            return !todo.status.deleted\n        }\n      });\n  }\n\n  deleteTodoPermanent(todo: Todo, id: number) {\n    return this._http.delete(`${environment.baseUrl}/todos/${id}}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            loggedIn\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            quote\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loggedIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loggedIn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Todo {\n  readonly id: number;\n  title: string;\n  status: {\n    completed: boolean;\n    favourite: boolean;\n    deleted: boolean;\n  };\n}\nexport interface User {\n  readonly id: number;\n  username: string;\n  quote: string;\n  loggedIn: boolean;\n  password: string;\n}\n\nexport enum TodoFilter {\n  ALL = 'all',\n  FAVOURITE = 'favourite ',\n  COMPLETED = 'completed',\n  DELETED = 'deleted',\n}\n\nexport enum TodoStatus {\n  FAVOURITE = 'favourite',\n  COMPLETED = 'completed',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                            \n                                loggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AuthenticateUser\n                            \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AuthenticateUser\n                        \n                    \n                \n            \n            \n                \nAuthenticateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(formValues: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formValues\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/users.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loggedIn.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  loggedIn = new BehaviorSubject(false)\n  loggedIn$ = this.loggedIn.asObservable();\n\n  constructor(private _http: HttpClient) { }\n\n  register(formValues: { userName: string, password: string, quote: string }) {\n    return this._http.post(`${environment.baseUrl}users`, formValues)\n  }\n\n  login(userName: string, password: string) {\n    return this._http.post(`${environment.baseUrl}users/signin`, { userName, password })\n  }\n\n  isLoggedIn(): boolean {\n    return this.loggedIn.getValue()\n  }\n\n  AuthenticateUser() {\n    this.loggedIn.next(true);\n  }\n\n  logout() {\n    this.loggedIn.next(false);\n  }\n\n  getUser() {\n    let token: any = localStorage.getItem('token');    \n    const httpOptions = {\n      headers: new HttpHeaders().set(\"Authorization\", token)\n    };\n    return this._http.get(`${environment.baseUrl}users`, httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/todo-details/todo-details.component.ts\n            \n            component\n            TodoDetailsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/todo/todo.component.ts\n            \n            component\n            TodoComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/todos.service.ts\n            \n            injectable\n            TodosService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/todos/todos.component.ts\n            \n            component\n            TodosComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bootstrap : ^5.2.3\n        \n            bootstrap-icons : ^1.10.3\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TodoFilter   (src/.../lib.ts)\n                        \n                        \n                            TodoStatus   (src/.../lib.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib.ts\n    \n        \n            \n                \n                    \n                        \n                        TodoFilter\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : all\n                            \n                        \n                        \n                            \n                                 FAVOURITE\n                            \n                        \n                        \n                            \n                                Value : favourite \n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : deleted\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TodoStatus\n                    \n                \n                        \n                            \n                                 FAVOURITE\n                            \n                        \n                        \n                            \n                                Value : favourite\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyTodoList\nThis project was generated with Angular CLI version 15.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nToDoList_project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nAppModule -->\n\nTodoComponent->AppModule\n\n\n\n\n\nTodoDetailsComponent\n\nTodoDetailsComponent\n\nAppModule -->\n\nTodoDetailsComponent->AppModule\n\n\n\n\n\nTodosComponent\n\nTodosComponent\n\nAppModule -->\n\nTodosComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  baseUrl: \"http://localhost:3000/\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  baseUrl: \"http://localhost:3000/\"\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
